#!/bin/bash

# Test Backend Unifi√© - Vue Joueur
# Montre comment tout fonctionne ensemble

echo "üéÆ TEST BACKEND UNIFI√â - VUE JOUEUR"
echo "==================================="

# Configuration
HOST="localhost:8080"
GAME_ID=1

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m'

# Fonction helper
test_api() {
    local method=$1
    local endpoint=$2
    local data=$3
    local description=$4
    
    echo -e "\n${BLUE}üìç $description${NC}"
    echo "‚Üí $method $endpoint"
    if [ -n "$data" ]; then
        echo "‚Üí Data: $data"
    fi
    
    if [ "$method" = "GET" ]; then
        curl -s -X GET "http://$HOST$endpoint" | jq '.' || echo "‚ùå Erreur"
    else
        curl -s -X POST "http://$HOST$endpoint" \
             -H "Content-Type: application/json" \
             -d "$data" | jq '.' || echo "‚ùå Erreur"
    fi
}

echo -e "\n${YELLOW}üöÄ D√©marrage du test...${NC}"

# 1. Cr√©er une partie
echo -e "\n${GREEN}=== 1. CR√âATION DE PARTIE ===${NC}"
test_api "POST" "/api/games" \
    '{"gameName":"Test Backend Unifi√©","players":["Jean","Claude"]}' \
    "Cr√©er une nouvelle partie"

# 2. Cr√©er des h√©ros
echo -e "\n${GREEN}=== 2. CR√âATION DES H√âROS ===${NC}"
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"HERO(Arthur)"}' \
    "Cr√©er Arthur pour Jean"

test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"HERO(Lysandrel)"}' \
    "Cr√©er Lysandrel pour Claude"

# 3. Vision initiale
echo -e "\n${GREEN}=== 3. VISION DU JOUEUR ===${NC}"
test_api "GET" "/api/temporal/state/$GAME_ID" "" \
    "√âtat du jeu - Vision normale"

# 4. Mouvement et temps
echo -e "\n${GREEN}=== 4. MOUVEMENT ET TEMPS ===${NC}"
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"MOV(Arthur, @15,15)"}' \
    "Arthur bouge de 5 cases ‚Üí 1 jour passe"

# 5. Donner un artefact
echo -e "\n${GREEN}=== 5. ARTEFACTS ET FORMULES ===${NC}"
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"CREATE(ITEM, temporal_sword, HERO:Arthur)"}' \
    "Donner l'√©p√©e temporelle √† Arthur"

# 6. Utiliser l'artefact
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"USE(ARTIFACT, temporal_sword, HERO:Arthur)"}' \
    "Utiliser l'√©p√©e ‚Üí +10 mouvement"

# 7. √âtat quantique
echo -e "\n${GREEN}=== 6. √âTATS QUANTIQUES ===${NC}"
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"œà001: (0.8+0.6i) ‚äô(Œît+2 @20,20 ‚ü∂ MOV(Arthur, @20,20))"}' \
    "Cr√©er √©tat quantique - Arthur pourrait aller en (20,20)"

# 8. Vision avec fog
echo -e "\n${GREEN}=== 7. FOG ET VISION ===${NC}"
test_api "GET" "/api/temporal/causality/zones/$GAME_ID?playerId=Jean" "" \
    "Zones de causalit√© pour Jean"

# 9. God View (pour comparaison)
echo -e "\n${GREEN}=== 8. GOD VIEW (Jean Admin) ===${NC}"
test_api "GET" "/api/temporal/godview/fog5d/$GAME_ID?x=20&y=20&day=3" "" \
    "Fog √† la position future (20,20) jour 3"

# 10. Collision temporelle
echo -e "\n${GREEN}=== 9. COLLISION TEMPORELLE ===${NC}"
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"MOV(Lysandrel, @15,15)"}' \
    "Lysandrel va au m√™me endroit ‚Üí Collision!"

# 11. Symboles GROFI
echo -e "\n${GREEN}=== 10. SYMBOLES GROFI ===${NC}"
test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"CREATE(ITEM, grofi_sigma, HERO:Arthur)"}' \
    "Donner arme GROFI Œ£"

test_api "POST" "/api/temporal/execute/$GAME_ID" \
    '{"script":"USE(ARTIFACT, grofi_sigma, HERO:Arthur)"}' \
    "Utiliser Œ£ ‚Üí R√©duction des amplitudes"

# 12. Performance
echo -e "\n${GREEN}=== 11. M√âTRIQUES PERFORMANCE ===${NC}"
test_api "GET" "/api/temporal/performance/metrics" "" \
    "Voir les m√©triques de performance"

echo -e "\n${GREEN}‚úÖ TEST TERMIN√â !${NC}"
echo -e "\n${YELLOW}üìä R√âSUM√â :${NC}"
echo "- Mouvement ‚Üí Temps avance"
echo "- Artefacts ‚Üí Formules pars√©es"
echo "- √âtats œà ‚Üí Superposition quantique"
echo "- Fog ‚Üí 7 √©tats diff√©rents"
echo "- GROFI ‚Üí Symboles sp√©ciaux"
echo "- Performance ‚Üí Optimis√© avec cache"

echo -e "\n${BLUE}üí° Le backend unifie tout :${NC}"
echo "1. Scripts HOTS ‚Üí TemporalScriptParser"
echo "2. Formules JSON ‚Üí DynamicFormulaParser"
echo "3. Amplitudes ‚Üí ComplexAmplitude unifi√©"
echo "4. Vision ‚Üí CausalityZoneService"
echo "5. God View ‚Üí GodViewService"

echo -e "\nüé≥ The backend abides! üé≥\n" 