import { test, expect } from '@playwright/test';

test.describe('Hero Movement Test', () => {
  test('Test hero movement and backend response', async ({ page }) => {
    test.setTimeout(60000);
    
    // Capturer les logs de la console
    page.on('console', msg => {
      if (msg.type() === 'log' || msg.type() === 'error') {
        console.log(`[BROWSER ${msg.type().toUpperCase()}]:`, msg.text());
      }
    });
    
    console.log('🚀 Starting hero movement test...');
    
    // 1. Navigate to game
    await page.goto('/');
    await page.waitForSelector('[data-testid="scenario-card-conquest-classic"]', { timeout: 10000 });
    console.log('✅ Home page loaded');
    
    // 2. Click on scenario
    await page.click('[data-testid="scenario-card-conquest-classic"]');
    console.log('✅ Clicked on conquest scenario');
    
    // 3. Wait for game interface
    await page.waitForSelector('.true-heroes-interface', { timeout: 10000 });
    console.log('✅ Game interface loaded');
    
    // 4. Click on Heroes button to see heroes
    await page.click('.control-btn[title="Heroes"]');
    await page.waitForTimeout(1000);
    console.log('✅ Heroes panel opened');
    
    // 5. Select first hero
    console.log('🔍 Looking for hero cards...');
    
    // Attendre un peu pour que les héros se chargent
    await page.waitForTimeout(2000);
    
    // Essayer plusieurs sélecteurs pour trouver un héros
    const heroSelectors = [
      '.hero-card',
      '.hero-item', 
      '[data-testid*="hero"]',
      '.hero-details',
      '.hero-portrait',
      '.hero-sprite'
    ];
    
    let heroFound = false;
    for (const selector of heroSelectors) {
      const count = await page.locator(selector).count();
      console.log(`  Checking ${selector}: found ${count} elements`);
      
      if (count > 0) {
        await page.locator(selector).first().click();
        console.log(`✅ Clicked on hero using selector: ${selector}`);
        heroFound = true;
        await page.waitForTimeout(1000);
        break;
      }
    }
    
    if (!heroFound) {
      console.error('❌ No hero found to select');
    }
    
    // 6. Get canvas and click on it to move hero
    const canvas = page.locator('canvas').first();
    if (await canvas.count() > 0) {
      console.log('🎯 Attempting to move hero by clicking on map...');
      
      // Click at position (400, 300) on the canvas
      await canvas.click({ position: { x: 400, y: 300 } });
      console.log('✅ Clicked on map at position (400, 300)');
      
      // Wait for backend response
      await page.waitForTimeout(3000);
      
      // Try another click
      console.log('🎯 Attempting second move...');
      await canvas.click({ position: { x: 500, y: 400 } });
      console.log('✅ Clicked on map at position (500, 400)');
      
      await page.waitForTimeout(3000);
    } else {
      console.error('❌ Canvas not found');
    }
    
    // 7. Check console for logs
    console.log('🔍 Check browser console for moveHero logs and backend responses');
    
    await page.waitForTimeout(5000);
    console.log('✅ Test completed');
  });
}); 