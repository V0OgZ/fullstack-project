# üåÄ SC√âNARIO AXIS - VOL DU TR√âSOR CAUSAL
# Test de causalit√© temporelle avec Axis le voyageur lin√©aire
# Par Vince Vega - Janvier 2025

# ===== SETUP INITIAL =====
# Cr√©er les h√©ros
HERO(Axis)
HERO(Lentus)

# Positions de d√©part
MOV(Axis, @5,5)
MOV(Lentus, @15,12)

# ===== √âQUIPEMENT AXIS =====
# Axis a ses objets temporels sp√©ciaux
CREATE(ITEM, Chronocompass_Lin√©aire, HERO:Axis)
CREATE(ITEM, Ancrage_de_R√©alit√©, HERO:Axis)
CREATE(ITEM, Gants_Subtilit√©_Causale, HERO:Axis)

# ===== TR√âSOR DE LENTUS =====
# Lentus poss√®de un tr√©sor pr√©cieux
CREATE(ITEM, Coffre_des_Merveilles, HERO:Lentus)

# ===== √âTATS TEMPORELS DIFF√âRENTIELS =====
# Axis progresse rapidement (3x plus vite)
œà001: (1.0+0.0i) ‚äô(Œît+1 @10,8 ‚ü∂ MOV(Axis, @10,8))
œà002: (1.0+0.0i) ‚äô(Œît+2 @14,12 ‚ü∂ MOV(Axis, @14,12))

# Lentus progresse lentement
œà003: (0.5+0.0i) ‚äô(Œît+3 @15,13 ‚ü∂ MOV(Lentus, @15,13))

# ===== TENTATIVE DE VOL =====
# Axis au jour 3 tente de voler le tr√©sor de Lentus (encore au jour 1)
œà004: (0.8+0.6i) ‚äô(Œît+3 @15,12 ‚ü∂ STEAL(ITEM:Coffre_des_Merveilles, HERO:Axis, FROM:Lentus))

# ===== R√àGLES CAUSALES =====
# Le vol ne peut r√©ussir que si Lentus a atteint l'√©tat temporel correspondant
CAUSAL_RULE(STEAL_BLOCKED_IF_OWNER_TEMPORAL_LAG)

# ===== OBSERVATION ET COLLAPSE =====
# Quand Axis observe l'√©tat du tr√©sor
Œ†(OBSERVE(ITEM:Coffre_des_Merveilles, HERO:Axis)) ‚áí ‚Ä†œà004

# ===== BROUILLARD CAUSAL =====
# Fog diff√©rentiel bas√© sur la s√©paration temporelle
FOG(TEMPORAL_DIFFERENTIAL, FORMULA:"day_diff * 30")

# ===== R√âSOLUTION DU PARADOXE =====
# Si le vol est bloqu√© causalement
IF(CAUSAL_BLOCKING) {
    ECHO("AXIS bloqu√© - Lentus n'a pas encore cr√©√© l'√©tat temporel du tr√©sor")
    CREATE(EFFECT, Causal_Resistance, HERO:Lentus)
}

# ===== VOYAGE TEMPOREL D'AXIS =====
# Axis utilise son Chronocompass pour voyager au bon moment
USE(ITEM, Chronocompass_Lin√©aire, HERO:Axis)
œà005: (0.9+0.0i) ‚äô(Œît+0 @15,12 ‚ü∂ TEMPORAL_SYNC(Axis, Lentus))

# ===== DEUXI√àME TENTATIVE =====
# Maintenant synchronis√© temporellement
œà006: (1.0+0.0i) ‚äô(Œît+4 @15,12 ‚ü∂ STEAL(ITEM:Coffre_des_Merveilles, HERO:Axis, FROM:Lentus))

# ===== CONS√âQUENCES =====
# Si le vol r√©ussit, Lentus d√©couvre la perte
Œ†(SUCCESS(STEAL)) ‚áí CREATE(EFFECT, Temporal_Debt, HERO:Axis)

# ===== CONTRE-ATTAQUE TEMPORELLE =====
# Lentus peut contre-attaquer r√©troactivement
œà007: (0.7+0.7i) ‚äô(Œît+5 @14,11 ‚ü∂ TEMPORAL_COUNTERATTACK(Lentus, Axis))

# ===== SYMBOLES GROFI =====
# ‚Ä† - Collapse des possibilit√©s de vol
‚Ä†[STEAL_ATTEMPT:Axis]

# Œ£ - Somme des √©tats temporels possibles
Œ£[TEMPORAL_STATES, HEROES:[Axis,Lentus]]

# ‚ÜØ - Chaos causal au point de rencontre
‚ÜØ[@15,12, TYPE:TEMPORAL_PARADOX]

# ===== V√âRIFICATIONS FINALES =====
# Qui poss√®de le tr√©sor √† la fin ?
CHECK(ITEM:Coffre_des_Merveilles, OWNER:?)

# √âtat temporel final des h√©ros
CHECK(HERO:Axis, TEMPORAL_DAY:?)
CHECK(HERO:Lentus, TEMPORAL_DAY:?)

# ===== MESSAGES =====
ECHO("Test de causalit√© temporelle - Vol d'Axis")
ECHO("R√®gle: On ne peut voler que si l'owner a atteint l'√©tat temporel")
ECHO("Axis doit synchroniser temporellement pour r√©ussir")

# ===== R√âSULTATS ATTENDUS =====
# 1. Premier vol bloqu√© par r√®gles causales
# 2. Synchronisation temporelle d'Axis
# 3. Deuxi√®me vol r√©ussi
# 4. Contre-attaque de Lentus
# 5. R√©solution du paradoxe temporel

# FIN DU SC√âNARIO 