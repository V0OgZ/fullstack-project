#!/bin/bash

# üß™ Script de test pour tous les nouveaux sc√©narios
# Par Memento l'Archive Vivante

echo "üéÆ TEST DE TOUS LES NOUVEAUX SC√âNARIOS"
echo "======================================"
echo ""

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Compteurs
TOTAL=0
SUCCESS=0
FAILED=0

# Fonction de test d'un sc√©nario
test_scenario() {
    local file=$1
    local name=$2
    
    echo -e "${BLUE}üìã Test: $name${NC}"
    echo "   Fichier: $file"
    
    ((TOTAL++))
    
    # V√©rifier que le fichier existe
    if [ ! -f "$file" ]; then
        echo -e "   ${RED}‚ùå ERREUR: Fichier non trouv√©${NC}"
        ((FAILED++))
        return
    fi
    
    # V√©rifier la syntaxe basique HOTS
    if grep -q "^## Configuration" "$file" && \
       grep -q "MAP_SIZE" "$file" && \
       grep -q "œà[0-9]\+:" "$file"; then
        echo -e "   ${GREEN}‚úÖ Syntaxe HOTS valide${NC}"
        
        # Compter les √©tats quantiques
        local psi_count=$(grep -c "œà[0-9]\+:" "$file")
        echo -e "   üìä √âtats quantiques: $psi_count"
        
        # V√©rifier les conditions de victoire
        if grep -q "VICTORY_CONDITION" "$file"; then
            echo -e "   ${GREEN}‚úÖ Conditions de victoire d√©finies${NC}"
        else
            echo -e "   ${YELLOW}‚ö†Ô∏è  Pas de conditions de victoire${NC}"
        fi
        
        ((SUCCESS++))
    else
        echo -e "   ${RED}‚ùå ERREUR: Structure HOTS invalide${NC}"
        ((FAILED++))
    fi
    
    echo ""
}

# Tester les sc√©narios story mode
echo -e "${YELLOW}üéØ SC√âNARIOS STORY MODE${NC}"
echo "======================"
echo ""

test_scenario "scenarios/opus_awakening.hots" "Chapitre 1: Le R√©veil d'OPUS"
test_scenario "scenarios/lamp_of_platon.hots" "Chapitre 2: La Lampe de Platon"
test_scenario "scenarios/interstice_exploration.hots" "Chapitre 3: L'Interstice"
test_scenario "scenarios/fourth_wall_battle.hots" "Chapitre 4: Bataille du 4√®me Mur"
test_scenario "scenarios/final_convergence.hots" "Chapitre 6: Convergence Finale"

# Tester les sc√©narios √©piques
echo -e "${YELLOW}üåü SC√âNARIOS √âPIQUES${NC}"
echo "==================="
echo ""

test_scenario "scenarios/episode_2_monde_vivant.hots" "Episode 2: Le Monde Vivant"
test_scenario "scenarios/grut_investigation_conspiracy.hots" "Investigation GRUT"
test_scenario "scenarios/bataille_finale_pistolet_vince.hots" "Bataille Finale Vince"
test_scenario "scenarios/initiation_laboratoire_quantique.hots" "Initiation Quantique"
test_scenario "scenarios/memento_archive_vivante.hots" "Memento Archive Vivante"

# Tester aussi Le Bureau
echo -e "${YELLOW}üè¢ SC√âNARIOS EXISTANTS${NC}"
echo "====================="
echo ""

test_scenario "scenarios/le_bureau_investigation.hots" "Le Bureau Investigation"
test_scenario "game_assets/scenarios/hots/chapter_5_dark_tower.hots" "Chapitre 5: Tour Sombre"

# R√©sum√©
echo ""
echo "======================================"
echo -e "${YELLOW}üìä R√âSUM√â DES TESTS${NC}"
echo "======================================"
echo -e "Total test√©    : ${TOTAL}"
echo -e "R√©ussis       : ${GREEN}${SUCCESS}${NC}"
echo -e "√âchou√©s       : ${RED}${FAILED}${NC}"

if [ $FAILED -eq 0 ]; then
    echo ""
    echo -e "${GREEN}üéâ TOUS LES TESTS SONT PASS√âS !${NC}"
else
    echo ""
    echo -e "${RED}‚ö†Ô∏è  Certains tests ont √©chou√©${NC}"
fi

# V√©rifier la coh√©rence avec StoryModeController
echo ""
echo -e "${YELLOW}üîç V√âRIFICATION COH√âRENCE BACKEND${NC}"
echo "================================="

if [ -f "backend/src/main/java/com/example/demo/controller/StoryModeController.java" ]; then
    echo "Sc√©narios r√©f√©renc√©s dans StoryModeController :"
    grep -o '"[^"]*\.hots"' backend/src/main/java/com/example/demo/controller/StoryModeController.java | sort | uniq
else
    echo -e "${RED}‚ùå StoryModeController non trouv√©${NC}"
fi

echo ""
echo "‚ú® Test termin√© !" 