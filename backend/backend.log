[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------< com.heroesoftimepoc:temporal-engine >-----------------
[INFO] Building Heroes of Time POC - Temporal Engine 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:3.2.0:run (default-cli) > test-compile @ temporal-engine >>>
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:resources (default-resources) @ temporal-engine ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 0 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:compile (default-compile) @ temporal-engine ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:testResources (default-testResources) @ temporal-engine ---
[INFO] skip non existing resourceDirectory /Users/admin/HOT/Heroes-of-Time/backend/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:testCompile (default-testCompile) @ temporal-engine ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot-maven-plugin:3.2.0:run (default-cli) < test-compile @ temporal-engine <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:3.2.0:run (default-cli) @ temporal-engine ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:06:25.863+02:00  INFO 41656 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 41656 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:06:25.865+02:00  INFO 41656 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:06:25.887+02:00  INFO 41656 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-18T01:06:25.887+02:00  INFO 41656 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-18T01:06:26.138+02:00  INFO 41656 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:06:26.162+02:00  INFO 41656 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 4 JPA repository interfaces.
2025-07-18T01:06:26.385+02:00  INFO 41656 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:06:26.389+02:00  INFO 41656 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:06:26.389+02:00  INFO 41656 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:06:26.407+02:00  INFO 41656 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-18T01:06:26.407+02:00  INFO 41656 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 520 ms
2025-07-18T01:06:26.419+02:00  INFO 41656 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-18T01:06:26.505+02:00  INFO 41656 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:06:26.506+02:00  INFO 41656 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-18T01:06:26.516+02:00  INFO 41656 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:06:26.574+02:00  INFO 41656 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:06:26.600+02:00  INFO 41656 --- [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.3.1.Final
2025-07-18T01:06:26.614+02:00  INFO 41656 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:06:26.715+02:00  INFO 41656 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:06:26.739+02:00  WARN 41656 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:06:27.200+02:00  INFO 41656 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:06:27.229+02:00  INFO 41656 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:06:27.385+02:00  INFO 41656 --- [  restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-18T01:06:27.689+02:00  WARN 41656 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:06:27.867+02:00  WARN 41656 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2025-07-18T01:06:27.879+02:00  WARN 41656 --- [  restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-07-18T01:06:27.880+02:00  INFO 41656 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:06:27.885+02:00  WARN 41656 --- [  restartedMain] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:06:27.885+02:00  INFO 41656 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-18T01:06:27.886+02:00  INFO 41656 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-07-18T01:06:27.894+02:00  INFO 41656 --- [  restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-18T01:06:27.902+02:00 ERROR 41656 --- [  restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.135 s
[INFO] Finished at: 2025-07-18T01:06:27+02:00
[INFO] ------------------------------------------------------------------------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 2025-07-18T01:07:02.446+02:00  INFO 39195 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-18T01:07:02.446+02:00  INFO 39195 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-18T01:07:02.447+02:00  INFO 39195 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
Hibernate: insert into games (created_at,current_player,current_timeline,current_turn,ended_at,game_name,map_height,map_width,max_players,started_at,status,winner,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into game_players (game_id,player_id) values (?,?)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select p1_0.game_id,p1_0.player_id from game_players p1_0 where p1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into tile_occupants (tile_id,occupant) values (?,?)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: update heroes set game_id=?,health=?,max_health=?,max_movement_points=?,max_temporal_energy=?,movement_points=?,name=?,player_id=?,position_x=?,position_y=?,status=?,temporal_energy=?,timeline_branch=? where id=?
Hibernate: insert into tile_occupants (tile_id,occupant) values (?,?)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: update heroes set game_id=?,health=?,max_health=?,max_movement_points=?,max_temporal_energy=?,movement_points=?,name=?,player_id=?,position_x=?,position_y=?,status=?,temporal_energy=?,timeline_branch=? where id=?
Hibernate: insert into tile_occupants (tile_id,occupant) values (?,?)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: update psi_states set action_type=?,branch_id=?,collapse_trigger=?,created_at=?,delta_t=?,expression=?,game_id=?,owner_hero=?,probability=?,psi_id=?,status=?,target_x=?,target_y=? where id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: update psi_states set action_type=?,branch_id=?,collapse_trigger=?,created_at=?,delta_t=?,expression=?,game_id=?,owner_hero=?,probability=?,psi_id=?,status=?,target_x=?,target_y=? where id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: update psi_states set action_type=?,branch_id=?,collapse_trigger=?,created_at=?,delta_t=?,expression=?,game_id=?,owner_hero=?,probability=?,psi_id=?,status=?,target_x=?,target_y=? where id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: select o1_0.tile_id,o1_0.occupant from tile_occupants o1_0 where o1_0.tile_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: select i1_0.hero_id,i1_0.item from hero_inventory i1_0 where i1_0.hero_id=?
Hibernate: insert into games (created_at,current_player,current_timeline,current_turn,ended_at,game_name,map_height,map_width,max_players,started_at,status,winner,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into game_players (game_id,player_id) values (?,?)
Hibernate: insert into games (created_at,current_player,current_timeline,current_turn,ended_at,game_name,map_height,map_width,max_players,started_at,status,winner,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into game_players (game_id,player_id) values (?,?)
Hibernate: insert into games (created_at,current_player,current_timeline,current_turn,ended_at,game_name,map_height,map_width,max_players,started_at,status,winner,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into game_players (game_id,player_id) values (?,?)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select p1_0.game_id,p1_0.player_id from game_players p1_0 where p1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
2025-07-18T01:16:47.774+02:00  WARN 39195 --- [nio-8080-exec-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23505, SQLState: 23505
2025-07-18T01:16:47.774+02:00 ERROR 39195 --- [nio-8080-exec-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_3 ON PUBLIC.PSI_STATES(PSI_ID NULLS FIRST) VALUES ( /* 1 */ U&'\\03c8001' )"; SQL statement:
insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default) [23505-224]
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
2025-07-18T01:16:47.792+02:00  WARN 39195 --- [nio-8080-exec-3] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23505, SQLState: 23505
2025-07-18T01:16:47.792+02:00 ERROR 39195 --- [nio-8080-exec-3] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unique index or primary key violation: "PUBLIC.CONSTRAINT_INDEX_3 ON PUBLIC.PSI_STATES(PSI_ID NULLS FIRST) VALUES ( /* 2 */ U&'\\03c8002' )"; SQL statement:
insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default) [23505-224]
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
2025-07-18T01:24:56.855+02:00  INFO 39195 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2025-07-18T01:24:56.858+02:00  INFO 39195 --- [      Thread-27] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:24:56.859+02:00  WARN 39195 --- [      Thread-27] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:24:56.859+02:00  INFO 39195 --- [      Thread-27] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Shutdown initiated...
2025-07-18T01:24:56.859+02:00  INFO 39195 --- [      Thread-27] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:24:56.902+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 39195 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:24:56.902+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:24:56.952+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:24:56.957+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 4 JPA repository interfaces.
2025-07-18T01:24:56.996+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:24:56.996+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:24:56.996+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:24:56.999+02:00  INFO 39195 --- [  restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2025-07-18T01:24:56.999+02:00  INFO 39195 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 96 ms
2025-07-18T01:24:57.006+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-10 - Starting...
2025-07-18T01:24:57.007+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-10 - Added connection conn63: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:24:57.007+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-10 - Start completed.
2025-07-18T01:24:57.007+02:00  INFO 39195 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:24:57.017+02:00  INFO 39195 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:24:57.018+02:00  INFO 39195 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:24:57.019+02:00  INFO 39195 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:24:57.019+02:00  WARN 39195 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:24:57.055+02:00  INFO 39195 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:24:57.058+02:00  INFO 39195 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:24:57.174+02:00  WARN 39195 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:24:57.225+02:00  INFO 39195 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-18T01:24:57.230+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-07-18T01:24:57.232+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Started TemporalEngineApplication in 0.336 seconds (process running for 1297.69)
2025-07-18T01:24:57.232+02:00  INFO 39195 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-18T01:25:43.074+02:00  INFO 39195 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
2025-07-18T01:25:43.077+02:00  INFO 39195 --- [      Thread-37] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:25:43.078+02:00  WARN 39195 --- [      Thread-37] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:25:43.078+02:00  INFO 39195 --- [      Thread-37] com.zaxxer.hikari.HikariDataSource       : HikariPool-10 - Shutdown initiated...
2025-07-18T01:25:43.078+02:00  INFO 39195 --- [      Thread-37] com.zaxxer.hikari.HikariDataSource       : HikariPool-10 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:25:43.119+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 39195 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:25:43.119+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:25:43.169+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:25:43.173+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 4 JPA repository interfaces.
2025-07-18T01:25:43.207+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:25:43.207+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:25:43.208+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:25:43.210+02:00  INFO 39195 --- [  restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2025-07-18T01:25:43.210+02:00  INFO 39195 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 90 ms
2025-07-18T01:25:43.216+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-11 - Starting...
2025-07-18T01:25:43.217+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-11 - Added connection conn73: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:25:43.217+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-11 - Start completed.
2025-07-18T01:25:43.217+02:00  INFO 39195 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:25:43.228+02:00  INFO 39195 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:25:43.229+02:00  INFO 39195 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:25:43.230+02:00  INFO 39195 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:25:43.231+02:00  WARN 39195 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:25:43.262+02:00  INFO 39195 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:25:43.265+02:00  INFO 39195 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:25:43.368+02:00  WARN 39195 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:25:43.413+02:00  INFO 39195 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-18T01:25:43.417+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-07-18T01:25:43.419+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Started TemporalEngineApplication in 0.309 seconds (process running for 1343.877)
2025-07-18T01:25:43.419+02:00  INFO 39195 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-18T01:26:30.273+02:00  INFO 39195 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-18T01:26:30.285+02:00  INFO 39195 --- [      Thread-41] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:26:30.291+02:00  WARN 39195 --- [      Thread-41] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:26:30.292+02:00  INFO 39195 --- [      Thread-41] com.zaxxer.hikari.HikariDataSource       : HikariPool-11 - Shutdown initiated...
2025-07-18T01:26:30.292+02:00  INFO 39195 --- [      Thread-41] com.zaxxer.hikari.HikariDataSource       : HikariPool-11 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:26:30.351+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 39195 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:26:30.351+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:26:30.400+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:26:30.405+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 4 JPA repository interfaces.
2025-07-18T01:26:30.440+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:26:30.440+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:26:30.440+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:26:30.443+02:00  INFO 39195 --- [  restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2025-07-18T01:26:30.443+02:00  INFO 39195 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 91 ms
2025-07-18T01:26:30.450+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-12 - Starting...
2025-07-18T01:26:30.451+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-12 - Added connection conn83: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:26:30.451+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-12 - Start completed.
2025-07-18T01:26:30.451+02:00  INFO 39195 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:26:30.461+02:00  INFO 39195 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:26:30.462+02:00  INFO 39195 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:26:30.463+02:00  INFO 39195 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:26:30.463+02:00  WARN 39195 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:26:30.498+02:00  INFO 39195 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:26:30.501+02:00  INFO 39195 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:26:30.604+02:00  WARN 39195 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:26:30.645+02:00  INFO 39195 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-18T01:26:30.650+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-07-18T01:26:30.651+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Started TemporalEngineApplication in 0.31 seconds (process running for 1391.109)
2025-07-18T01:26:30.652+02:00  INFO 39195 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-18T01:27:09.420+02:00  INFO 39195 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
2025-07-18T01:27:09.424+02:00  INFO 39195 --- [      Thread-45] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:27:09.425+02:00  WARN 39195 --- [      Thread-45] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:27:09.426+02:00  INFO 39195 --- [      Thread-45] com.zaxxer.hikari.HikariDataSource       : HikariPool-12 - Shutdown initiated...
2025-07-18T01:27:09.426+02:00  INFO 39195 --- [      Thread-45] com.zaxxer.hikari.HikariDataSource       : HikariPool-12 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:27:09.476+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 39195 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:27:09.476+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:27:09.520+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:27:09.524+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 4 JPA repository interfaces.
2025-07-18T01:27:09.558+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:27:09.559+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:27:09.559+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:27:09.562+02:00  INFO 39195 --- [  restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2025-07-18T01:27:09.562+02:00  INFO 39195 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 86 ms
2025-07-18T01:27:09.567+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-13 - Starting...
2025-07-18T01:27:09.568+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-13 - Added connection conn93: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:27:09.568+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-13 - Start completed.
2025-07-18T01:27:09.568+02:00  INFO 39195 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:27:09.578+02:00  INFO 39195 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:27:09.579+02:00  INFO 39195 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:27:09.580+02:00  INFO 39195 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:27:09.581+02:00  WARN 39195 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:27:09.615+02:00  INFO 39195 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:27:09.618+02:00  INFO 39195 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:27:09.726+02:00  WARN 39195 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:27:09.770+02:00  INFO 39195 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-18T01:27:09.774+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-07-18T01:27:09.776+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Started TemporalEngineApplication in 0.309 seconds (process running for 1430.232)
2025-07-18T01:27:09.776+02:00  INFO 39195 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-18T01:27:35.409+02:00  INFO 39195 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 22 class path changes (0 additions, 21 deletions, 1 modification)
2025-07-18T01:27:35.412+02:00  INFO 39195 --- [      Thread-49] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:27:35.412+02:00  WARN 39195 --- [      Thread-49] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:27:35.413+02:00  INFO 39195 --- [      Thread-49] com.zaxxer.hikari.HikariDataSource       : HikariPool-13 - Shutdown initiated...
2025-07-18T01:27:35.413+02:00  INFO 39195 --- [      Thread-49] com.zaxxer.hikari.HikariDataSource       : HikariPool-13 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:27:35.456+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 39195 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:27:35.456+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:27:35.505+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:27:35.509+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 4 JPA repository interfaces.
2025-07-18T01:27:35.545+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:27:35.545+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:27:35.545+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:27:35.548+02:00  INFO 39195 --- [  restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2025-07-18T01:27:35.548+02:00  INFO 39195 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 91 ms
2025-07-18T01:27:35.555+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-14 - Starting...
2025-07-18T01:27:35.555+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-14 - Added connection conn103: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:27:35.555+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-14 - Start completed.
2025-07-18T01:27:35.555+02:00  INFO 39195 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:27:35.566+02:00  INFO 39195 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:27:35.566+02:00  INFO 39195 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:27:35.567+02:00  INFO 39195 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:27:35.568+02:00  WARN 39195 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:27:35.603+02:00  INFO 39195 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:27:35.605+02:00  INFO 39195 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:27:35.711+02:00  WARN 39195 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:27:35.757+02:00  INFO 39195 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-18T01:27:35.761+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-07-18T01:27:35.763+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Started TemporalEngineApplication in 0.315 seconds (process running for 1456.22)
2025-07-18T01:27:35.764+02:00  INFO 39195 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-18T01:27:37.171+02:00  INFO 39195 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 21 class path changes (21 additions, 0 deletions, 0 modifications)
2025-07-18T01:27:37.175+02:00  INFO 39195 --- [      Thread-53] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
2025-07-18T01:27:37.177+02:00  WARN 39195 --- [      Thread-53] o.s.b.f.support.DisposableBeanAdapter    : Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2025-07-18T01:27:37.177+02:00  INFO 39195 --- [      Thread-53] com.zaxxer.hikari.HikariDataSource       : HikariPool-14 - Shutdown initiated...
2025-07-18T01:27:37.177+02:00  INFO 39195 --- [      Thread-53] com.zaxxer.hikari.HikariDataSource       : HikariPool-14 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-07-18T01:27:37.227+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Starting TemporalEngineApplication using Java 17.0.15 with PID 39195 (/Users/admin/HOT/Heroes-of-Time/backend/target/classes started by admin in /Users/admin/HOT/Heroes-of-Time/backend)
2025-07-18T01:27:37.227+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : No active profile set, falling back to 1 default profile: "default"
2025-07-18T01:27:37.271+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-18T01:27:37.275+02:00  INFO 39195 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 4 JPA repository interfaces.
2025-07-18T01:27:37.308+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-18T01:27:37.308+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-18T01:27:37.308+02:00  INFO 39195 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-07-18T01:27:37.311+02:00  INFO 39195 --- [  restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2025-07-18T01:27:37.311+02:00  INFO 39195 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 83 ms
2025-07-18T01:27:37.317+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-15 - Starting...
2025-07-18T01:27:37.318+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-15 - Added connection conn113: url=jdbc:h2:mem:temporaldb user=SA
2025-07-18T01:27:37.318+02:00  INFO 39195 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-15 - Start completed.
2025-07-18T01:27:37.318+02:00  INFO 39195 --- [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:temporaldb'
2025-07-18T01:27:37.329+02:00  INFO 39195 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-18T01:27:37.330+02:00  INFO 39195 --- [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-18T01:27:37.331+02:00  INFO 39195 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-18T01:27:37.331+02:00  WARN 39195 --- [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-18T01:27:37.366+02:00  INFO 39195 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists game_players cascade 
Hibernate: drop table if exists game_tiles cascade 
Hibernate: drop table if exists games cascade 
Hibernate: drop table if exists hero_inventory cascade 
Hibernate: drop table if exists heroes cascade 
Hibernate: drop table if exists psi_states cascade 
Hibernate: drop table if exists tile_occupants cascade 
Hibernate: create table game_players (game_id bigint not null, player_id varchar(255))
Hibernate: create table game_tiles (defense_bonus integer, has_psi_states boolean, is_locked boolean, is_temporal_zone boolean, lock_duration integer, movement_cost integer, temporal_energy_bonus integer, x integer not null, y integer not null, game_id bigint, id bigint generated by default as identity, building_owner varchar(255), building_type varchar(255), temporal_zone_type varchar(255), terrain varchar(255), primary key (id))
Hibernate: create table games (current_turn integer, map_height integer, map_width integer, max_players integer, created_at timestamp(6), ended_at timestamp(6), id bigint generated by default as identity, started_at timestamp(6), current_player varchar(255), current_timeline varchar(255), game_name varchar(255) not null, status varchar(255) check (status in ('WAITING','ACTIVE','PAUSED','FINISHED','CANCELLED')), winner varchar(255), primary key (id))
Hibernate: create table hero_inventory (hero_id bigint not null, item varchar(255))
Hibernate: create table heroes (health integer, max_health integer, max_movement_points integer, max_temporal_energy integer, movement_points integer, position_x integer, position_y integer, temporal_energy integer, game_id bigint, id bigint generated by default as identity, name varchar(255) not null, player_id varchar(255), status varchar(255) check (status in ('ACTIVE','TEMPORAL_SHIFT','QUANTUM_SUPERPOSITION','COLLAPSED','DEAD')), timeline_branch varchar(255), primary key (id))
Hibernate: create table psi_states (delta_t integer, probability float(53), target_x integer, target_y integer, created_at timestamp(6), game_id bigint, id bigint generated by default as identity, action_type varchar(255), branch_id varchar(255), collapse_trigger varchar(255), expression TEXT, owner_hero varchar(255), psi_id varchar(255) not null unique, status varchar(255) check (status in ('ACTIVE','COLLAPSED','TRIGGERED','EXPIRED')), primary key (id))
Hibernate: create table tile_occupants (tile_id bigint not null, occupant varchar(255))
Hibernate: alter table if exists game_players add constraint FKrbr2flqdav5ovyjas7q92u64r foreign key (game_id) references games
Hibernate: alter table if exists game_tiles add constraint FK9jnp7yfteauo45smvmxa8710m foreign key (game_id) references games
Hibernate: alter table if exists hero_inventory add constraint FKox21x0dd4fg7w81h3a8o6chu foreign key (hero_id) references heroes
Hibernate: alter table if exists heroes add constraint FKb88jgdc3dfmmhbnrpl6u5sjdn foreign key (game_id) references games
Hibernate: alter table if exists psi_states add constraint FK9kbp67wo94i0jk9w4v3ja4meq foreign key (game_id) references games
Hibernate: alter table if exists tile_occupants add constraint FKia56skupqk3qxypotqpovr3gb foreign key (tile_id) references game_tiles
2025-07-18T01:27:37.370+02:00  INFO 39195 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-18T01:27:37.470+02:00  WARN 39195 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-18T01:27:37.516+02:00  INFO 39195 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-18T01:27:37.520+02:00  INFO 39195 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-07-18T01:27:37.522+02:00  INFO 39195 --- [  restartedMain] c.h.t.TemporalEngineApplication          : Started TemporalEngineApplication in 0.303 seconds (process running for 1457.978)
2025-07-18T01:27:37.523+02:00  INFO 39195 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-18T01:28:08.718+02:00  INFO 39195 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-18T01:28:08.719+02:00  INFO 39195 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-18T01:28:08.720+02:00  INFO 39195 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
Hibernate: insert into games (created_at,current_player,current_timeline,current_turn,ended_at,game_name,map_height,map_width,max_players,started_at,status,winner,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into game_players (game_id,player_id) values (?,?)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select p1_0.game_id,p1_0.player_id from game_players p1_0 where p1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: insert into game_tiles (building_owner,building_type,defense_bonus,game_id,has_psi_states,is_locked,is_temporal_zone,lock_duration,movement_cost,temporal_energy_bonus,temporal_zone_type,terrain,x,y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: insert into heroes (game_id,health,max_health,max_movement_points,max_temporal_energy,movement_points,name,player_id,position_x,position_y,status,temporal_energy,timeline_branch,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: insert into psi_states (action_type,branch_id,collapse_trigger,created_at,delta_t,expression,game_id,owner_hero,probability,psi_id,status,target_x,target_y,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select h1_0.game_id,h1_0.id,h1_0.health,h1_0.max_health,h1_0.max_movement_points,h1_0.max_temporal_energy,h1_0.movement_points,h1_0.name,h1_0.player_id,h1_0.position_x,h1_0.position_y,h1_0.status,h1_0.temporal_energy,h1_0.timeline_branch from heroes h1_0 where h1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: update psi_states set action_type=?,branch_id=?,collapse_trigger=?,created_at=?,delta_t=?,expression=?,game_id=?,owner_hero=?,probability=?,psi_id=?,status=?,target_x=?,target_y=? where id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
Hibernate: select g1_0.id,g1_0.created_at,g1_0.current_player,g1_0.current_timeline,g1_0.current_turn,g1_0.ended_at,g1_0.game_name,g1_0.map_height,g1_0.map_width,g1_0.max_players,g1_0.started_at,g1_0.status,g1_0.winner from games g1_0 where g1_0.id=?
Hibernate: select ps1_0.game_id,ps1_0.id,ps1_0.action_type,ps1_0.branch_id,ps1_0.collapse_trigger,ps1_0.created_at,ps1_0.delta_t,ps1_0.expression,ps1_0.owner_hero,ps1_0.probability,ps1_0.psi_id,ps1_0.status,ps1_0.target_x,ps1_0.target_y from psi_states ps1_0 where ps1_0.game_id=?
Hibernate: select t1_0.game_id,t1_0.id,t1_0.building_owner,t1_0.building_type,t1_0.defense_bonus,t1_0.has_psi_states,t1_0.is_locked,t1_0.is_temporal_zone,t1_0.lock_duration,t1_0.movement_cost,t1_0.temporal_energy_bonus,t1_0.temporal_zone_type,t1_0.terrain,t1_0.x,t1_0.y from game_tiles t1_0 where t1_0.game_id=?
