#!/bin/bash
# üåÄüå´Ô∏è Test complet ER=EPR + Fog of War
# Par : MERLIN  
# Date : 2025-01-29
# Mission : Tester le sc√©nario complet de Vince Vega

API_URL="http://localhost:8080/api/magic-formulas/execute"
GAME_ID="vince-complete-test-$(date +%s)"

echo "üåÄüå´Ô∏è TEST COMPLET : VINCE VEGA ER=EPR + FOG OF WAR"
echo "=================================================="
echo "Game ID: $GAME_ID"
echo ""

# Fonction helper pour formater les r√©sultats
show_result() {
    local step="$1"
    local response="$2"
    echo -e "\n${step}"
    echo "$response" | jq -r '.normalInterpretation // .error // .'
    echo "---"
}

# PHASE 1: SETUP DES MONDES
echo "üìç PHASE 1: CR√âATION DES POCKET WORLDS"

# Cr√©er Alpha World
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà500: ‚äô(CREATE_POCKET_WORLD(Alpha) ‚ü∂ FOG_ENABLED)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"worldSettings\": {
        \"size\": \"20x20\",
        \"fogDensity\": 0.8,
        \"quantumResonance\": true
      }
    }
  }")
show_result "1Ô∏è‚É£ Cr√©ation Alpha World" "$response"

# Cr√©er Beta World
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà501: ‚äô(CREATE_POCKET_WORLD(Beta) ‚ü∂ FOG_ENABLED)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"worldSettings\": {
        \"size\": \"20x20\",
        \"fogDensity\": 0.9,
        \"quantumResonance\": true
      }
    }
  }")
show_result "2Ô∏è‚É£ Cr√©ation Beta World" "$response"

# PHASE 2: PLACEMENT DES ACTEURS
echo -e "\nüìç PHASE 2: PLACEMENT DES ACTEURS"

# Placer Vince dans Alpha
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà502: ‚äô(PLACE_HERO(Vince, @5,5, Alpha) ‚ü∂ QUANTUM_READY)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"hero\": {
        \"id\": \"Vince\",
        \"weapon\": \"Dimensional_Gun_ER\",
        \"visionRadius\": 3
      }
    }
  }")
show_result "3Ô∏è‚É£ Placement de Vince dans Alpha" "$response"

# Placer Target dans Beta (cach√©)
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà503: ‚äô(PLACE_TARGET(MrOrange, @15,15, Beta) ‚ü∂ HIDDEN_IN_FOG)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"target\": {
        \"id\": \"MrOrange\",
        \"type\": \"ENEMY\",
        \"stealthLevel\": 5
      }
    }
  }")
show_result "4Ô∏è‚É£ Placement de la cible dans Beta" "$response"

# PHASE 3: √âTABLIR L'INTRICATION QUANTIQUE
echo -e "\nüìç PHASE 3: INTRICATION QUANTIQUE EPR"

response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà504: ‚äô(ENTANGLE(Vince, MrOrange) ‚ü∂ EPR_LINK)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"entanglementType\": \"CROSS_DIMENSIONAL\",
      \"strength\": 0.95
    }
  }")
show_result "5Ô∏è‚É£ Cr√©ation intrication EPR" "$response"

# PHASE 4: TENTATIVE DE D√âTECTION NORMALE
echo -e "\nüìç PHASE 4: TESTS DE D√âTECTION"

# D√©tection normale (doit √©chouer)
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà505: ‚äô(DETECT_NORMAL(Vince, MrOrange) ‚ü∂ CHECK)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"method\": \"STANDARD_VISION\"
    }
  }")
show_result "6Ô∏è‚É£ D√©tection normale (devrait √©chouer)" "$response"

# D√©tection quantique via EPR
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà506: ‚äô(DETECT_QUANTUM(Vince, MrOrange) ‚ü∂ EPR_LOCATE)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"method\": \"ENTANGLEMENT_SCAN\"
    }
  }")
show_result "7Ô∏è‚É£ D√©tection quantique EPR" "$response"

# PHASE 5: OUVERTURE DU WORMHOLE
echo -e "\nüìç PHASE 5: CR√âATION DU PONT ER"

response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà507: ‚äô(OPEN_WORMHOLE(Alpha@5,5 ‚ü∑ Beta@15,15) ‚ü∂ ER_BRIDGE)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"stabilityRequired\": 0.7,
      \"energyCost\": 100
    }
  }")
show_result "8Ô∏è‚É£ Ouverture wormhole ER" "$response"

# PHASE 6: TIR QUANTIQUE
echo -e "\nüìç PHASE 6: TIR TRANS-DIMENSIONNEL"

response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà508: ‚äô(QUANTUM_SHOT(Vince ‚Üí MrOrange) ‚ü∂ THROUGH_DIMENSIONS)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"weapon\": \"Dimensional_Gun_ER\",
      \"bypassFog\": true,
      \"useEntanglement\": true
    }
  }")
show_result "9Ô∏è‚É£ Tir quantique de Vince" "$response"

# PHASE 7: EFFONDREMENT ET CONFIRMATION
echo -e "\nüìç PHASE 7: EFFONDREMENT DE LA FONCTION D'ONDE"

response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà509: ‚äô(COLLAPSE_WAVE(MrOrange) ‚ü∂ REALITY_LOCK)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"collapseType\": \"DAMAGE_CONFIRMATION\"
    }
  }")
show_result "üîü Effondrement de la cible" "$response"

# PHASE 8: TRAVERS√âE DU WORMHOLE
echo -e "\nüìç PHASE 8: TRAVERS√âE DIMENSIONNELLE"

response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà510: ‚äô(TRAVERSE_WORMHOLE(Vince, Alpha ‚Üí Beta) ‚ü∂ DIMENSION_JUMP)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"preserveEntanglement\": true
    }
  }")
show_result "1Ô∏è‚É£1Ô∏è‚É£ Travers√©e du wormhole" "$response"

# PHASE 9: V√âRIFICATION FINALE
echo -e "\nüìç PHASE 9: V√âRIFICATIONS FINALES"

# V√©rifier position de Vince
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà511: ‚äô(GET_POSITION(Vince) ‚ü∂ CONFIRM)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\"
    }
  }")
show_result "1Ô∏è‚É£2Ô∏è‚É£ Position actuelle de Vince" "$response"

# V√©rifier ER=EPR
response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà999: ‚äô(VERIFY(ER_EQUALS_EPR) ‚ü∂ QUANTUM_PROOF)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"checkAll\": true
    }
  }")
show_result "1Ô∏è‚É£3Ô∏è‚É£ V√©rification ER=EPR" "$response"

# PHASE 10: RAPPORT FINAL
echo -e "\nüìç PHASE 10: RAPPORT DE MISSION"

response=$(curl -s -X POST "$API_URL" \
  -H "Content-Type: application/json" \
  -d "{
    \"formula\": \"œà512: ‚äô(MISSION_REPORT() ‚ü∂ SUMMARY)\",
    \"context\": {
      \"gameId\": \"$GAME_ID\",
      \"metrics\": [
        \"shots_fired\",
        \"dimensions_crossed\",
        \"fog_penetration\",
        \"entanglement_stability\",
        \"paradox_level\"
      ]
    }
  }")
show_result "1Ô∏è‚É£4Ô∏è‚É£ Rapport de mission" "$response"

echo -e "\n‚úÖ TEST COMPLET TERMIN√â !"
echo "üìä R√©sultats sauvegard√©s dans les logs du serveur" 