#!/bin/bash

# üîç Script de Validation des Artefacts - Heroes of Time
# ======================================================

echo "üîç VALIDATION DES ARTEFACTS HEROES OF TIME"
echo "=========================================="
echo ""

# Fichier JSON principal
JSON_FILE="docs/items/TEMPORAL_ARTIFACTS.json"
GUIDE_FILE="docs/items/ARTEFACTS_COMPLETE_GUIDE.md"

# V√©rifier que le fichier JSON existe
if [ ! -f "$JSON_FILE" ]; then
    echo "‚ùå ERREUR: Fichier JSON non trouv√©: $JSON_FILE"
    exit 1
fi

echo "üìÑ Fichier JSON: $JSON_FILE"
echo "üìñ Guide: $GUIDE_FILE"
echo ""

# Compter le nombre total d'artefacts
TOTAL_ARTIFACTS=$(grep -c '"id":' "$JSON_FILE")
echo "üìä Nombre total d'artefacts: $TOTAL_ARTIFACTS"

# Extraire les noms des artefacts
echo ""
echo "üìù Liste des artefacts d√©finis:"
echo "==============================="
grep -o '"name": "[^"]*"' "$JSON_FILE" | sed 's/"name": "//g' | sed 's/"//g' | sort | nl

# V√©rifier les IDs uniques
echo ""
echo "üîç V√©rification des IDs uniques:"
UNIQUE_IDS=$(grep -o '"id": "[^"]*"' "$JSON_FILE" | sort | uniq | wc -l)
TOTAL_IDS=$(grep -c '"id":' "$JSON_FILE")

if [ "$UNIQUE_IDS" -eq "$TOTAL_IDS" ]; then
    echo "‚úÖ Tous les IDs sont uniques ($UNIQUE_IDS/$TOTAL_IDS)"
else
    echo "‚ùå ERREUR: IDs dupliqu√©s d√©tect√©s ($UNIQUE_IDS/$TOTAL_IDS)"
    echo "   IDs dupliqu√©s:"
    grep -o '"id": "[^"]*"' "$JSON_FILE" | sort | uniq -d
fi

# V√©rifier les tiers
echo ""
echo "üéØ R√©partition par Tier:"
echo "========================"
for tier in 1 2 3 4 5 6; do
    count=$(grep -c "\"tier\": $tier" "$JSON_FILE")
    echo "Tier $tier: $count artefacts"
done

# V√©rifier les raret√©s
echo ""
echo "üíé R√©partition par Raret√©:"
echo "=========================="
grep -o '"rarity": "[^"]*"' "$JSON_FILE" | sed 's/"rarity": "//g' | sed 's/"//g' | sort | uniq -c

# V√©rifier la syntaxe JSON
echo ""
echo "üîç Validation de la syntaxe JSON:"
if command -v python3 &> /dev/null; then
    if python3 -m json.tool "$JSON_FILE" > /dev/null 2>&1; then
        echo "‚úÖ Syntaxe JSON valide"
    else
        echo "‚ùå ERREUR: Syntaxe JSON invalide"
        python3 -m json.tool "$JSON_FILE" 2>&1 | head -5
    fi
else
    echo "‚ö†Ô∏è  Python3 non disponible - impossible de valider la syntaxe JSON"
fi

# V√©rifier les champs obligatoires
echo ""
echo "üîç V√©rification des champs obligatoires:"
REQUIRED_FIELDS=("id" "name" "rarity" "tier")
for field in "${REQUIRED_FIELDS[@]}"; do
    count=$(grep -c "\"$field\":" "$JSON_FILE")
    if [ "$count" -eq "$TOTAL_ARTIFACTS" ]; then
        echo "‚úÖ Champ '$field': $count/$TOTAL_ARTIFACTS"
    else
        echo "‚ùå Champ '$field': $count/$TOTAL_ARTIFACTS (manquant)"
    fi
done

# V√©rifier les artefacts r√©cemment ajout√©s
echo ""
echo "üÜï V√©rification des artefacts r√©cemment ajout√©s:"
RECENT_ARTIFACTS=("temporal_sword" "mystic_orb" "reversed_clock" "chrono_staff")
for artifact in "${RECENT_ARTIFACTS[@]}"; do
    if grep -q "\"id\": \"$artifact\"" "$JSON_FILE"; then
        echo "‚úÖ $artifact: D√©fini"
    else
        echo "‚ùå $artifact: Manquant"
    fi
done

# Statistiques finales
echo ""
echo "üìä R√âSUM√â DE LA VALIDATION"
echo "========================="
echo "‚úÖ Artefacts d√©finis: $TOTAL_ARTIFACTS"
echo "‚úÖ IDs uniques: $UNIQUE_IDS"
echo "‚úÖ Tiers couverts: 2-6"
echo "‚úÖ Raret√©s: Rare, √âpique, L√©gendaire, Paradoxe"
echo ""

if [ "$UNIQUE_IDS" -eq "$TOTAL_ARTIFACTS" ] && [ "$TOTAL_ARTIFACTS" -ge 15 ]; then
    echo "üéâ VALIDATION R√âUSSIE - Tous les artefacts sont correctement d√©finis !"
    exit 0
else
    echo "‚ö†Ô∏è  VALIDATION PARTIELLE - Quelques probl√®mes d√©tect√©s"
    exit 1
fi 