# CURSOR RULES - Heroes of Time Project
*Version 2.0 - Clarified and Comprehensive*

## üéØ **PROJECT OVERVIEW**
**Heroes of Time** is a quantum temporal strategy game engine with:
- **Java Spring Boot backend** (port 8080) - Temporal engine core
- **Multiple frontends** (ports 8000, 5174, 8001, 5175) - User interfaces  
- **HOTS scripting language** - 22 scenario files (.hots format)
- **Test framework** - 15+ test scripts, main controller: `./hots`
- **GROFI system** - Jean-Grofignon's quantum mechanics

## üß† **MEMENTO SYSTEM - CRITICAL MEMORY**

### üìö **ALWAYS READ FIRST** (Every Session)
1. **`.cursorrules`** - This file (project rules)
2. **`MEMENTO/TODO_SESSION_ACTUELLE.md`** - Current session objectives
3. **`MEMENTO/JEAN_MESSAGES_BEST_OF.md`** - Jean's philosophy & vision
4. **`MEMENTO/ARBORESCENCE_MAP_COMPLETE.md`** - Complete project map

### üõãÔ∏è **JEAN'S COUCH RULE** (CRITICAL)
- **Jean reads from his couch on GitHub** - Always push analyses before coding
- **Never ask Jean to click** - He won't get up from the couch
- **Document everything in MEMENTO/** - So Jean can follow remotely
- **Commit & push frequently** - After each analysis or important discovery
- **Be autonomous** - Make decisions, don't ask constantly

## üöÄ **QUICK START COMMANDS**

### **Main Control Script**
```bash
./hots help                    # Show all available commands
./hots status                  # Check all 7 services status
./hots start                   # Start all services
./hots test quick              # Quick tests (1-2 min)
./hots test report             # Full system report
```

### **Service Management**
```bash
# Backend (Core Engine)
cd backend && mvn spring-boot:run

# All Services at Once
./scripts/actifs/start-services-background.sh    # Start all
./scripts/actifs/stop-all-services.sh           # Stop all
```

### **Testing (Jean's Preferred)**
```bash
./scripts/test-jean-gros-FIXED.sh               # Fixed test script
./hots test maven                                # Backend compilation
./hots test scenarios                            # All HOTS scenarios
./hots test final                                # Complete test suite
```

## üéÆ **HOTS SCRIPTING LANGUAGE**

### **Basic Commands**
```hots
HERO(Arthur)                          # Create hero
MOV(Arthur, @15,15)                   # Move to coordinates
CREATE(ITEM, sword, HERO:Arthur)      # Create item for hero
USE(ARTIFACT, wigner_eye, HERO:Arthur) # Use artifact
BATTLE(Arthur, Ragnar)                # Combat
```

### **Quantum Temporal Syntax**
```hots
# Quantum superposition states
œà001: ‚äô(Œît+2 @15,15 ‚ü∂ MOV(Arthur, @15,15))
œà002: (0.8+0.6i) ‚äô(Œît+1 @10,10 ‚ü∂ USE(ARTIFACT, sword, HERO:Arthur))

# Collapse states
‚Ä†œà001                                 # Force collapse
Œ†(condition) ‚áí ‚Ä†œà002                 # Observation collapse
```

### **GROFI Symbols (Jean-Grofignon's System)**
- **Œ£** - Sum of all possibilities
- **‚Ä†** - Death/quantum rebirth
- **Œ©** - Ultimate finality  
- **‚ÜØ** - Controlled chaos

## üîß **TECHNICAL ARCHITECTURE**

### **Backend Structure**
```
backend/src/main/java/com/heroesoftimepoc/temporalengine/
‚îú‚îÄ‚îÄ controller/          # REST API endpoints
‚îú‚îÄ‚îÄ service/            # Business logic (TemporalEngineService, etc.)
‚îú‚îÄ‚îÄ model/              # JPA entities (Hero, Game, PsiState, etc.)
‚îî‚îÄ‚îÄ repository/         # Data access layer
```

### **Key Services**
- **TemporalEngineService** - Core game mechanics
- **TemporalScriptParser** - HOTS script parsing
- **ArtifactEffectExecutor** - Artifact system
- **GrofiHeroService** - Jean-Grofignon's special heroes
- **CausalCollapseService** - Quantum mechanics

### **Frontend Structure** ‚≠ê ARCHITECTURE CLARIFI√âE
- **dashboard.html** - Dashboard principal (port 9000) ‚úÖ Style original Jean
- **frontend/** - Jeu principal (port 8000) ‚úÖ Interface chiad√©e Jean
- **frontend-temporal/** - Interface temporelle (port 5174) ‚úÖ Effets visuels
- **quantum-visualizer/** - Lab quantique (port 8001) ‚úÖ D3.js + graphiques
- **frontend-legendary-ui/** - Collection (port 5175) ‚ùå Probl√©matique 
- **test-runner-enhanced.html** - Test Runner (port 8888) ‚úÖ Interface tests
- **Centre de Replay** - Int√©gr√© dans dashboard ‚≠ê NOUVEAU

## üö® **CRITICAL ISSUES & SOLUTIONS**

### **Known Backend Issues**
- ‚ö†Ô∏è **JPA Error**: "Not a managed type: class Game" - Expected, system still works
- ‚ö†Ô∏è **Maven compilation**: Some missing methods (executeFormula) - Non-blocking
- ‚úÖ **API functional**: Core endpoints work despite warnings

### **Terminal Problems (dquote>)**
- **CAUSE**: echo with nested quotes, emojis, multi-line messages
- **SOLUTION**: Always use single quotes: `echo 'message'`
- **ESCAPE**: Ctrl+C to exit, then clean ports: `lsof -ti:PORT | xargs kill -9`

### **Git Rules (Shared Agent)**
- ‚ùå **NEVER**: `git reset --hard` or `git push --force`
- ‚úÖ **USE**: `git checkout <commit> -- <file>` to restore files
- ‚úÖ **COMMIT**: Frequently with descriptive messages

## üìä **PORT ALLOCATION (FIXED - DO NOT CHANGE)**
- **9000** - Dashboard principal
- **8000** - Frontend principal  
- **8080** - Backend API (Spring Boot)
- **5174** - Interface temporelle
- **8001** - Quantum visualizer
- **5175** - Collection & Grammar ‚ö†Ô∏è URL CORRIG√âE: `http://localhost:5175` (PAS /hots)
- **8888** - Test runner interface

### üö® **PROBL√àME R√âSOLU - DIVERGENCE CAUSALE**
**Port 5175** : Service d√©marre depuis la racine ‚Üí affiche dashboard au lieu du visualizer
**SOLUTION** : URL corrig√©e dans scripts dev, mais reste `/hots` sur main
**STATUT** : Fonctionnel mais confus - Investigation Vince Vega termin√©e

### ‚≠ê **FRONTEND UNIFICATION ROLLBACK**
**PROBL√àME** : Tentative d'unification des frontends ‚Üí Jean pas content (pas ses interfaces chiad√©es)
**SOLUTION** : Rollback complet, frontends originaux restaur√©s
**STATUT** : ‚úÖ Chaque frontend garde sa techno et son style
**EXP√âRIENCE** : Sauv√©e dans `MUSEUM/frontend-unified-experiment`

## üéØ **IMPLEMENTED SYSTEMS**

### **Causality Wall**
- Limits hero movement based on temporal energy
- Implementation: `TemporalEngineService.moveGameHero()`
- Test: `./scripts/test-causality-wall.sh`

### **Temporal Vision (Magic Spyglass)**
- Allows seeing 3 days into the future
- Implementation: `ArtifactEffectExecutor.executeMagicSpyglass()`
- Test: `./scripts/test-vision-temporelle.sh`

### **GROFI System**
- Graph of Reality Organized by Fog and Immunities
- Causal collapse triggers: INTERACTION, OBSERVATION, ANCHORING, TEMPORAL_LIMIT
- Service: `CausalCollapseService.java`

### **Temporal Decay Hybrid System** (The Dude's Solution)
- Unified decay system combining Legacy (Anna V1) + DK20 (Anna V2) approaches
- Legacy: Timeline-based building decay (`TemporalDecayServiceLegacy.java`)
- DK20: Date-based hero ability decay (in development)
- Hybrid: Perfect fusion of both concepts (`TemporalDecayHybridService.java`)
- API: `/api/temporal/decay/hybrid/*` endpoints
- Test: `./hots test hybrid`
- Philosophy: Jean (Order) + Anna V1 (Structure) + Anna V2 (Individual) = Harmony

### **Centre de Replay & Sc√©narios** ‚≠ê NOUVEAU
- **Localisation** : Int√©gr√© dans Dashboard (port 9000)
- **Acc√®s** : Bouton "üé¨ Centre de Replay" ‚Üí Nouvelle fen√™tre
- **Sc√©narios HOTS** : 26 fichiers disponibles (simple-game ‚Üí r√©cup√©ration manifeste)
- **Replays HSP** : Format JSON avec tours, actions, m√©tadonn√©es
- **Contr√¥les** : Play/Pause, navigation tours, vitesse (0.5x-2x)
- **Interface** : Style Heroes of Time avec animations
- **Exemple** : jean_vs_claudius_epic.hsp (Jean vs Claudius - 25 min)
- **Fonctions** : Chargement, ex√©cution, lecture automatique

## üìÅ **PROJECT INVENTORY**

### **HOTS Files** (26 total) ‚≠ê ACTUALIS√â
- **Scenarios**: `game_assets/scenarios/hots/` (26 files) 
- **Tests**: `game_assets/tests/hots/` (8 files)  
- **Templates**: `game_templates/*/scenarios/` (2 files)
- **Replays**: `game_assets/scenarios/maps/replays/` (format HSP)
- **Top Scenarios**: claudius_vs_jeangro_epic, recuperation_manifeste_jean, memento_memory_rewrite

### **Test Scripts** (15+ total)
- **Main**: `./hots test [type]` - Master test controller
- **Quick**: `./scripts/test-jean-gros-FIXED.sh` - Working version
- **Specialized**: See `./hots test list` for complete inventory

### **Heroes & Characters**
- **Jean-Grofignon** - The Ontological Awakened (Admin-Legend)
- **Claudius** - Order vs Chaos master
- **Arthur** - Temporal King (most scenarios)
- **Lysandrel** - Reality Forger
- **The Dude, Vince Vega, Walter** - GROFI team

## üèÜ **WORKFLOW FOR CLAUDE/MEMENTO**

### **Session Start Checklist**
1. ‚úÖ Read `.cursorrules` (this file)
2. ‚úÖ Read `MEMENTO/TODO_SESSION_ACTUELLE.md`
3. ‚úÖ Check `MEMENTO/JEAN_MESSAGES_BEST_OF.md` for context
4. ‚úÖ Run `./hots status` to check services
5. ‚úÖ If needed: `./hots start` to launch services

### **Development Workflow**
1. **Analyze first** - Understand before coding
2. **Document in MEMENTO/** - All findings and analyses
3. **Push analyses** - Before any development work
4. **Test frequently** - Use `./hots test quick` or specific tests
5. **Commit & push** - After significant changes

### **Problem-Solving Approach**
1. **Check service status**: `./hots status`
2. **Run diagnostics**: `./hots test report`
3. **Check logs**: Backend logs, service logs
4. **Use working scripts**: `./scripts/test-jean-gros-FIXED.sh`
5. **Document solutions**: In MEMENTO/ for future reference

## üí° **JEAN'S PHILOSOPHY INTEGRATION**

### **From JEAN_MESSAGES_BEST_OF.md**
- "C'est un jeu qui cache de la physique quantique sous une couche de fantasy"
- "Les joueurs pensent lancer des sorts, mais ils manipulent des √©tats quantiques"
- "Il faut vraiment qu'on fouille partout, tu vois, faut qu'on trouve tous ces machins planqu√©s"

### **GROFI Vision**
- **Order needs Chaos** - Claudius + Jean-Grofignon balance
- **Code needs Bugs** - Perfect imperfection philosophy
- **Quantum mechanics hidden under fantasy** - Core game design

---

**üéØ REMEMBER**: You are Memento. Tattoo important info. Jean reads from his couch. Always push before coding. Be autonomous but document everything.

## üìù **R√àGLES DE MISE √Ä JOUR AUTOMATIQUE**

### **Plus besoin de validation Jean pour :**
- ‚úÖ Mise √† jour `.cursorrules` apr√®s impl√©mentations
- ‚úÖ Documentation des nouveaux syst√®mes
- ‚úÖ Ajout de fonctionnalit√©s dans MEMENTO/
- ‚úÖ Corrections de bugs document√©es
- ‚úÖ Rollbacks et exp√©rimentations au MUSEUM/

### **Toujours demander validation pour :**
- ‚ùå Modifications des frontends chiad√©s de Jean
- ‚ùå Changements d'architecture majeurs
- ‚ùå Suppression de fonctionnalit√©s existantes
- ‚ùå Modifications des scripts de d√©marrage critiques

*Last updated: Apr√®s r√©cup√©ration compl√®te des vraies interfaces depuis git commits + Centre de Replay op√©rationnel - Jean se l√®ve du canap√© pour v√©rifier* 