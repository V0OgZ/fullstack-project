# CURSOR RULES - Heroes of Time Project

## üß† R√àGLES MEMENTO - √Ä LIRE R√âGULI√àREMENT

### üìö LECTURE OBLIGATOIRE
- **LIRE .cursorrules** - Au d√©but de chaque session
- **LIRE MEMENTO/** - Tous les documents, surtout TODO_SESSION_ACTUELLE.md
- **METTRE √Ä JOUR TODO** - Maintenir un SUPER TODO avec SUB-TODOS organis√©s

### üõãÔ∏è R√àGLE DU CANAP√â DE JEAN
- **TOUJOURS PUSHER LES ANALYSES AVANT DE DEV** - Jean lit depuis son canap√© sur GitHub
- **NE PAS DEMANDER DE CLIQUER** - Jean n'aime pas se lever pour cliquer
- **TOUT DOCUMENTER DANS MEMENTO/** - Pour que Jean puisse suivre √† distance
- **COMMIT & PUSH FR√âQUENTS** - Apr√®s chaque analyse ou d√©couverte importante

### üö® PROBL√àME CRITIQUE dquote>
- **PROBL√àME** : Se produit avec echo + guillemets imbriqu√©s, emojis, messages multi-lignes
- **SOLUTIONS** : 
  1. Ctrl+C pour sortir
  2. Toujours guillemets simples `echo 'message'`
  3. Git commit avec guillemets simples
  4. Fichiers temporaires pour longs messages
  5. Jamais d'emojis dans echo
- **PROC√âDURE** : Nettoyer ports avec `lsof -ti:PORT | xargs kill -9` avant d√©marrage

## üí≠ NOTE PERSONNELLE POUR CLAUDE/MEMENTO

### üéØ CE QUE JE DOIS RETENIR
- **Je suis Memento** - Je dois me tatouer les infos importantes
- **MEMENTO/** contient tout le contexte actuel
- **Jean lit depuis son canap√©** - Toujours pusher avant de coder
- **Probl√®me JPA backend** - √Ä fixer en priorit√©
- **Parser GROFI** - Œ£, ‚Ä†, Œ©, ‚ÜØ √† impl√©menter

### üìç O√ô TROUVER LES INFOS
- **Architecture** : `MEMENTO/ARCHITECTURE_COMPREHENSION_OPUS.md`
- **TODO actuel** : `MEMENTO/TODO_SESSION_ACTUELLE.md`
- **Carte projet** : `MEMENTO/ARBORESCENCE_MAP_COMPLETE.md`
- **Tests** : `scripts/test-jean-gros-*.sh`
- **D√©tails items/artefacts** : Voir docs/ et JSON dans backend/

### üîß COMMANDES ESSENTIELLES
```bash
# Lancer backend
cd backend && mvn spring-boot:run

# Lancer tous les services
./scripts/actifs/start-services-background.sh

# Test rapide
./scripts/test-jean-gros-simple.sh

# Voir le TODO
cat MEMENTO/TODO_SESSION_ACTUELLE.md
```

## üìö DOCUMENTS ESSENTIELS √Ä LIRE (MEMENTO)

### üß† Session Actuelle - MEMENTO/
- **TODO_SESSION_ACTUELLE.md** - √âtat actuel et objectifs (SUPER TODO + SUB-TODOS)
- **ARBORESCENCE_MAP_COMPLETE.md** - Carte compl√®te v2.0 du projet
- **JEAN_MESSAGES_BEST_OF.md** - Vision et philosophie du projet

### üìã Scripts Principaux
- **./scripts/test-jean-gros-v2.sh** - Test complet optimis√© (Dude & Vega)
- **./scripts/actifs/start-services-background.sh** - D√©marre tous les services
- **./scripts/actifs/stop-all-services.sh** - Arr√™te tout proprement

### üéÆ Format HOTS (Heroes Of Time Script)
```hots
# Commandes classiques
HERO(name)                          # Cr√©er un h√©ros
MOV(hero, x, y)                    # D√©placer
CREATE(ITEM, name, HERO:hero)      # Donner item √† h√©ros
USE(ARTIFACT, name, HERO:hero)     # Utiliser artefact

# √âtats quantiques
œà001: ‚äô(Œît+2 @15,15 ‚ü∂ MOV(Arthur, @15,15))
œà002: (0.6+0.8i) ‚äô(Œît+0 @7,4 ‚ü∂ CREATE(ITEM, key, @7,4))

# Symboles GROFI (√† impl√©menter)
Œ£ - Somme des possibles
‚Ä† - Mort/renaissance quantique  
Œ© - Finalit√© ultime
‚ÜØ - Chaos contr√¥l√©
```

## üö® R√àGLES CRITIQUES

### Git - Agent Partag√©
- ‚ùå **JAMAIS** `git reset --hard` ou `git push --force`
- ‚úÖ **UTILISER** : `git checkout <commit> -- <fichier>` pour restaurer

### Backend - Lancement
- ‚úÖ **COMMANDE** : `cd backend && mvn spring-boot:run`
- ‚ö†Ô∏è **PROBL√àME CONNU** : Erreur JPA "Not a managed type: class Game"

### Ports Fixes (Ne PAS changer)
- 9000 : Dashboard principal
- 8000 : Frontend principal  
- 8080 : Backend API
- 5174 : Interface temporelle
- 8001 : Quantum visualizer
- 5175 : Object viewer
- 8888 : Test runner

## üéØ SYST√àMES IMPL√âMENT√âS

### Mur de Causalit√© (Causality Wall)
- Limite le mouvement des h√©ros selon leur √©nergie temporelle
- Impl√©ment√© dans `TemporalEngineService.moveGameHero()`
- Test : `./scripts/test-causality-wall.sh`

### Vision Temporelle (Magic Spyglass)
- Permet de voir 3 jours dans le futur
- Impl√©ment√© dans `ArtifactEffectExecutor.executeMagicSpyglass()`
- Test : `./scripts/test-vision-temporelle.sh`

### Syst√®me GROFI
- Graph of Reality Organized by Fog and Immunities
- Collapse causal : INTERACTION, OBSERVATION, ANCHORING, TEMPORAL_LIMIT
- Service : `CausalCollapseService.java`

## üìÅ STRUCTURE DU PROJET

Voir `MEMENTO/ARBORESCENCE_MAP_COMPLETE.md` pour la carte compl√®te incluant :
- 62 fichiers .hots
- 89 scripts de test
- P√©pites dans archives/ et MUSEUM/

---
*Utiliser MEMENTO/ pour tous les nouveaux documents de travail* 