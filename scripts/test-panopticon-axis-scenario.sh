#!/bin/bash

# Test du sc√©nario PANOPTICŒ©N avec Axis
# Ex√©cute le sc√©nario HOTS ligne par ligne

echo "üéõÔ∏è TEST SC√âNARIO PANOPTICŒ©N - AXIS ET VISION 5D"
echo "=============================================="

# Configuration
HOST="localhost:8080"
GAME_ID=1
SCENARIO_FILE="../game_assets/scenarios/hots/panopticon_axis_test.hots"

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
PURPLE='\033[0;35m'
RED='\033[0;31m'
NC='\033[0m'

# Fonction pour ex√©cuter une commande HOTS
execute_hots() {
    local command=$1
    local description=$2
    
    # Ignorer les commentaires et lignes vides
    if [[ $command =~ ^#.*$ ]] || [[ -z "$command" ]]; then
        return
    fi
    
    echo -e "\n${BLUE}‚Üí Ex√©cution: ${NC}$command"
    if [ -n "$description" ]; then
        echo -e "${YELLOW}  Description: $description${NC}"
    fi
    
    # Envoyer la commande au backend
    response=$(curl -s -X POST "http://$HOST/api/temporal/execute/$GAME_ID" \
        -H "Content-Type: application/json" \
        -d "{\"script\":\"$command\"}" | jq '.')
    
    # V√©rifier le succ√®s
    success=$(echo "$response" | jq -r '.success // false')
    if [ "$success" = "true" ]; then
        echo -e "${GREEN}  ‚úì Succ√®s${NC}"
    else
        echo -e "${RED}  ‚úó Erreur${NC}"
        echo "$response" | jq '.'
    fi
    
    # Petit d√©lai pour voir ce qui se passe
    sleep 0.5
}

# Cr√©er la partie
echo -e "\n${GREEN}=== CR√âATION DE LA PARTIE ===${NC}"
curl -s -X POST "http://$HOST/api/games" \
    -H "Content-Type: application/json" \
    -d '{"gameName":"Test PANOPTICŒ©N Axis","players":["Jean","Claude"]}' | jq '.'

echo -e "\n${GREEN}=== EX√âCUTION DU SC√âNARIO ===${NC}"

# Commandes importantes du sc√©nario
echo -e "\n${PURPLE}1. SETUP INITIAL${NC}"
execute_hots "HERO(Axis)" "Cr√©er Axis, le voyageur temporel"
execute_hots "HERO(Jean-Grofignon)" "Cr√©er Jean-Grofignon"
execute_hots "HERO(Arthur)" "Cr√©er Arthur"
execute_hots "HERO(Lysandrel)" "Cr√©er Lysandrel"

execute_hots "MOV(Axis, @10,10)" "Positionner Axis"
execute_hots "MOV(Jean-Grofignon, @5,5)" "Positionner Jean"
execute_hots "MOV(Arthur, @20,20)" "Positionner Arthur"
execute_hots "MOV(Lysandrel, @25,25)" "Positionner Lysandrel"

echo -e "\n${PURPLE}2. ARTEFACTS SP√âCIAUX${NC}"
execute_hots "CREATE(ITEM, Chronocompass_Lin√©aire, HERO:Axis)" "Compass temporel d'Axis"
execute_hots "CREATE(ITEM, singularity_artifact, HERO:Jean-Grofignon)" "Artefact PANOPTICŒ©N"
execute_hots "CREATE(ITEM, temporal_sword, HERO:Arthur)" "√âp√©e temporelle"
execute_hots "CREATE(ITEM, quantum_mirror, HERO:Lysandrel)" "Miroir quantique"

echo -e "\n${PURPLE}3. √âTATS QUANTIQUES COMPLEXES${NC}"
execute_hots "œà001: (1.0+0.0i) ‚äô(Œît+10 @30,30 ‚ü∂ MOV(Axis, @30,30))" "Axis voyage au futur"
execute_hots "œà002: (0.8+0.6i) ‚äô(Œît+5 @15,15 ‚ü∂ MOV(Arthur, @15,15))" "Arthur au centre"
execute_hots "œà003: (0.6+0.8i) ‚äô(Œît+5 @15,15 ‚ü∂ MOV(Lysandrel, @15,15))" "Collision potentielle"
execute_hots "œà004: (0.707+0.707i) ‚äô(Œît+15 @40,40 ‚ü∂ CREATE(ITEM, temporal_treasure, @40,40))" "Tr√©sor futur"

echo -e "\n${PURPLE}4. TEST RESTRICTION D'AXIS${NC}"
execute_hots "USE(ARTIFACT, quantum_mirror, HERO:Axis)" "Axis ne peut pas utiliser objets quantiques!"

echo -e "\n${PURPLE}5. SYMBOLES GROFI${NC}"
execute_hots "Œ£[HERO:Arthur, RADIUS:5]" "Somme des possibles"
execute_hots "Œ©[HERO:Jean-Grofignon, MODE:ABSOLUTE_OBSERVER]" "PANOPTICŒ©N activ√©!"
execute_hots "‚ÜØ[@15,15, INTENSITY:HIGH]" "Chaos au centre"

echo -e "\n${PURPLE}6. V√âRIFICATION √âTAT DU JEU${NC}"
echo -e "${BLUE}√âtat quantique du jeu:${NC}"
curl -s -X GET "http://$HOST/api/temporal/state/$GAME_ID" | jq '.'

echo -e "\n${BLUE}Vue PANOPTICŒ©N (3D):${NC}"
curl -s -X GET "http://$HOST/api/temporal/panopticon/data/$GAME_ID" | jq '.'

echo -e "\n${BLUE}Vue God View (5D):${NC}"
curl -s -X GET "http://$HOST/api/temporal/godview/multiverse/$GAME_ID" | jq '.'

echo -e "\n${GREEN}=== R√âSUM√â DU TEST ===${NC}"
echo "‚úÖ Sc√©nario HOTS ex√©cut√©"
echo "‚úÖ Axis cr√©√© avec restrictions quantiques"
echo "‚úÖ √âtats œà avec amplitudes complexes"
echo "‚úÖ Symboles GROFI int√©gr√©s"
echo "‚úÖ PANOPTICŒ©N activ√© pour Jean-Grofignon"

echo -e "\n${YELLOW}Points cl√©s test√©s:${NC}"
echo "- Axis ne peut pas utiliser quantum_mirror ‚ùå"
echo "- Jean-Grofignon voit tout avec PANOPTICŒ©N üëÅÔ∏è"
echo "- Interf√©rences quantiques en (15,15) üåÄ"
echo "- Tr√©sor dans le futur (jour 15) üíé"
echo "- Amplitudes complexes fonctionnelles üìä"

echo -e "\nüéõÔ∏è Le PANOPTICŒ©N voit tout, contr√¥le tout ! üéõÔ∏è\n" 