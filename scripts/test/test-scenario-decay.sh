#!/bin/bash

# üåü TEST SC√âNARIO D√âCROISSANCE TEMPORELLE - ANNA THE MARTOPICKER
# ================================================================
# Test du sc√©nario HOTS de d√©croissance temporelle

set -e

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
BACKEND_URL="http://localhost:8080"
SCENARIO_FILE="game_assets/scenarios/hots/test_decroissance_temporelle.hots"
GAME_NAME="DecayScenarioTest"
PLAYER_ID="decay-scenario-test"

echo -e "${PURPLE}üåü TEST SC√âNARIO D√âCROISSANCE TEMPORELLE - ANNA THE MARTOPICKER${NC}"
echo -e "${CYAN}===============================================================${NC}"
echo -e "${YELLOW}Sc√©nario:${NC} $SCENARIO_FILE"
echo -e "${YELLOW}Concept:${NC} Test complet du syst√®me de d√©croissance temporelle"
echo ""

# V√©rifier que le fichier de sc√©nario existe
if [ ! -f "$SCENARIO_FILE" ]; then
    echo -e "${RED}‚ùå Fichier de sc√©nario non trouv√©: $SCENARIO_FILE${NC}"
    exit 1
fi

# V√©rifier que le backend est d√©marr√©
echo -e "${YELLOW}üîç V√©rification du backend...${NC}"
if ! curl -s "$BACKEND_URL/api/health" > /dev/null; then
    echo -e "${RED}‚ùå Backend non accessible sur $BACKEND_URL${NC}"
    echo -e "${YELLOW}üí° D√©marrez le backend avec: cd backend && mvn spring-boot:run${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Backend accessible${NC}"

# Cr√©er un nouveau jeu
echo -e "${YELLOW}üéÆ Cr√©ation du jeu de test...${NC}"
GAME_RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/temporal/games" \
    -H "Content-Type: application/json" \
    -d "{\"gameName\":\"$GAME_NAME\",\"playerId\":\"$PLAYER_ID\"}")

GAME_ID=$(echo "$GAME_RESPONSE" | grep -o '"gameId":[0-9]*' | cut -d':' -f2)

if [ -z "$GAME_ID" ]; then
    echo -e "${RED}‚ùå Erreur lors de la cr√©ation du jeu${NC}"
    echo "$GAME_RESPONSE"
    exit 1
fi

echo -e "${GREEN}‚úÖ Jeu cr√©√© avec ID: $GAME_ID${NC}"

# D√©marrer le jeu
echo -e "${YELLOW}üöÄ D√©marrage du jeu...${NC}"
START_RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/temporal/games/$GAME_ID/start" \
    -H "Content-Type: application/json")

echo -e "${GREEN}‚úÖ Jeu d√©marr√©${NC}"

# ============================================================================
# EX√âCUTION DU SC√âNARIO HOTS
# ============================================================================

echo ""
echo -e "${BLUE}üìã EX√âCUTION DU SC√âNARIO HOTS${NC}"
echo -e "${CYAN}================================${NC}"

# Lire et ex√©cuter le sc√©nario ligne par ligne
echo -e "${YELLOW}üìñ Lecture du sc√©nario...${NC}"

line_number=0
success_count=0
error_count=0

while IFS= read -r line; do
    line_number=$((line_number + 1))
    
    # Ignorer les lignes vides et les commentaires
    if [[ -z "$line" || "$line" =~ ^[[:space:]]*# ]]; then
        continue
    fi
    
    # Ignorer les lignes QUOTE (elles sont g√©r√©es automatiquement)
    if [[ "$line" =~ ^QUOTE ]]; then
        continue
    fi
    
    echo -e "${CYAN}üìù Ligne $line_number: $line${NC}"
    
    # Ex√©cuter la commande HOTS
    RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/temporal/games/$GAME_ID/script" \
        -H "Content-Type: application/json" \
        -d "{\"script\":\"$line\"}")
    
    # V√©rifier le succ√®s
    if echo "$RESPONSE" | grep -q '"success":true'; then
        echo -e "${GREEN}‚úÖ Succ√®s${NC}"
        success_count=$((success_count + 1))
    else
        echo -e "${RED}‚ùå Erreur${NC}"
        echo "$RESPONSE"
        error_count=$((error_count + 1))
    fi
    
    # Petite pause pour √©viter de surcharger le backend
    sleep 0.1
    
done < "$SCENARIO_FILE"

echo ""
echo -e "${GREEN}‚úÖ Sc√©nario ex√©cut√©${NC}"
echo -e "${CYAN}üìä Statistiques:${NC}"
echo -e "  ‚Ä¢ Commandes ex√©cut√©es: $success_count"
echo -e "  ‚Ä¢ Erreurs: $error_count"

# ============================================================================
# TEST DE LA D√âCROISSANCE TEMPORELLE
# ============================================================================

echo ""
echo -e "${BLUE}üìã TEST DE LA D√âCROISSANCE TEMPORELLE${NC}"
echo -e "${CYAN}====================================${NC}"

# Appliquer la d√©croissance temporelle
echo -e "${YELLOW}‚è∞ Application de la d√©croissance temporelle...${NC}"
DECAY_RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/temporal/decay/$GAME_ID/apply" \
    -H "Content-Type: application/json")

echo -e "${GREEN}‚úÖ D√©croissance appliqu√©e${NC}"
echo -e "${CYAN}üìä R√©sultats de la d√©croissance:${NC}"
echo "$DECAY_RESPONSE" | jq '.' 2>/dev/null || echo "$DECAY_RESPONSE"

# Obtenir les statistiques d√©taill√©es
echo -e "${YELLOW}üìà Statistiques d√©taill√©es...${NC}"
STATS_RESPONSE=$(curl -s -X GET "$BACKEND_URL/api/temporal/decay/$GAME_ID/statistics" \
    -H "Content-Type: application/json")

echo -e "${CYAN}üìä Statistiques d√©taill√©es:${NC}"
echo "$STATS_RESPONSE" | jq '.' 2>/dev/null || echo "$STATS_RESPONSE"

# ============================================================================
# V√âRIFICATION DE L'√âTAT FINAL
# ============================================================================

echo ""
echo -e "${BLUE}üìã V√âRIFICATION DE L'√âTAT FINAL${NC}"
echo -e "${CYAN}================================${NC}"

# Obtenir l'√©tat final du jeu
echo -e "${YELLOW}üìä √âtat final du jeu...${NC}"
FINAL_STATE=$(curl -s -X GET "$BACKEND_URL/api/temporal/games/$GAME_ID/state" \
    -H "Content-Type: application/json")

echo -e "${CYAN}üìä √âtat final:${NC}"
if command -v jq >/dev/null 2>&1; then
    echo "$FINAL_STATE" | jq '.'
else
    echo "$FINAL_STATE"
fi

# ============================================================================
# R√âSUM√â FINAL
# ============================================================================

echo ""
echo -e "${PURPLE}üéØ R√âSUM√â FINAL DU TEST SC√âNARIO${NC}"
echo -e "${CYAN}==================================${NC}"
echo -e "${GREEN}‚úÖ Sc√©nario de d√©croissance temporelle test√© avec succ√®s${NC}"
echo -e "${GREEN}‚úÖ Syst√®me d'Anna the Martopicker valid√©${NC}"
echo ""
echo -e "${YELLOW}üìã Fonctionnalit√©s test√©es:${NC}"
echo "  ‚Ä¢ Cr√©ation de h√©ros (Arthur, Morgana)"
echo "  ‚Ä¢ Construction de b√¢timents (ch√¢teau, tour, mur, maison)"
echo "  ‚Ä¢ Positionnement temporel (pass√© vs futur)"
echo "  ‚Ä¢ Artefacts de protection (Wigner's Eye, Temporal Compass)"
echo "  ‚Ä¢ Combat et causalit√©"
echo "  ‚Ä¢ √âtats quantiques et superpositions"
echo "  ‚Ä¢ Collapses causaux"
echo "  ‚Ä¢ D√©croissance temporelle automatique"
echo "  ‚Ä¢ Statistiques et monitoring"
echo ""
echo -e "${BLUE}üé≠ Message d'Anna the Martopicker:${NC}"
echo "  'Le temps n'attend personne, et ceux qui s'attardent dans le pass√©"
echo "   verront leurs constructions s'effriter comme le sable entre leurs doigts.'"
echo ""
echo -e "${GREEN}üéâ Test du sc√©nario termin√© avec succ√®s !${NC}" 