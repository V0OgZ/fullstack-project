#!/bin/bash
# Script de test pour le sc√©nario "Le Treizi√®me Codex"
# Combat final : Coalition des Trois vs Omega-Z√©ro

echo "üîÆ ========================================="
echo "   LE TREIZI√àME CODEX - TEST SCENARIO"
echo "   Coalition vs Omega-Z√©ro"
echo "üîÆ ========================================="

# Configuration
API_URL="http://localhost:8080/api"
GAME_NAME="codex_final_test_$(date +%s)"

# Cr√©er une nouvelle partie
echo -e "\nüìñ Cr√©ation du Treizi√®me Codex..."
GAME_RESPONSE=$(curl -s -X POST "$API_URL/games" \
  -H "Content-Type: application/json" \
  -d "{\"gameName\": \"$GAME_NAME\", \"maxPlayers\": 4}")

GAME_ID=$(echo $GAME_RESPONSE | grep -o '"id":[0-9]*' | cut -d: -f2)
echo "‚úì Partie cr√©√©e: ID=$GAME_ID"

# Fonction pour ex√©cuter des commandes
execute_command() {
    local command=$1
    local description=$2
    echo -e "\n‚ö° $description"
    echo "   Commande: $command"
    
    RESPONSE=$(curl -s -X POST "$API_URL/games/$GAME_ID/execute" \
      -H "Content-Type: application/json" \
      -d "{\"command\": \"$command\"}")
    
    if echo "$RESPONSE" | grep -q '"success":true'; then
        echo "   ‚úì Succ√®s"
    else
        echo "   ‚úó Erreur: $RESPONSE"
    fi
    
    sleep 0.5
}

# Phase 1: Configuration initiale
echo -e "\n\nüåå === PHASE 1: CONFIGURATION DU NEXUS ==="

execute_command "WORLD_SIZE(21, 21)" "Configuration de la carte 21x21"
execute_command "SET_TURN_LIMIT(30)" "Limite √† 30 tours"

# Cr√©er les zones sp√©ciales
execute_command "CREATE(ZONE, nexus_central, @10,10)" "Cr√©ation du Nexus Central"
execute_command "CREATE(ZONE, fracture_ouest, @3,10)" "Fracture temporelle Ouest"
execute_command "CREATE(ZONE, fracture_est, @17,10)" "Fracture temporelle Est"

# Phase 2: Invocation des h√©ros
echo -e "\n\n‚öîÔ∏è === PHASE 2: INVOCATION DE LA COALITION ==="

# Jean-Grofignon
execute_command "HERO(Jean-Grofignon)" "Invocation de Jean-Grofignon"
execute_command "MOV(Jean-Grofignon, @5,15)" "Positionnement de Jean"
execute_command "CREATE(ITEM, container_paradoxal, HERO:Jean-Grofignon)" "Container Paradoxal"
execute_command "CREATE(ITEM, debugger_supreme, HERO:Jean-Grofignon)" "Debugger Supr√™me"

# Claudius
execute_command "HERO(Claudius)" "Invocation de Claudius"
execute_command "MOV(Claudius, @15,15)" "Positionnement de Claudius"
execute_command "CREATE(ITEM, compilateur_quantique, HERO:Claudius)" "Compilateur Quantique"
execute_command "CREATE(ITEM, fork_dimensionnel, HERO:Claudius)" "Fork Dimensionnel"

# Chlamydius
execute_command "HERO(Chlamydius)" "Invocation de Chlamydius"
execute_command "MOV(Chlamydius, @10,18)" "Positionnement de Chlamydius"
execute_command "CREATE(ITEM, parchemin_sale, HERO:Chlamydius)" "Parchemin Sale"
execute_command "CREATE(ITEM, encre_vivante, HERO:Chlamydius)" "Encre Vivante"

# Phase 3: Apparition d'Omega-Z√©ro
echo -e "\n\nüëÅÔ∏è === PHASE 3: MANIFESTATION D'OMEGA-Z√âRO ==="

execute_command "HERO(Omega-Zero)" "Manifestation d'Omega-Z√©ro"
execute_command "MOV(Omega-Zero, @10,10)" "Omega au centre du Nexus"

# Les 7 artefacts l√©gendaires
echo -e "\nüé≠ √âquipement des 7 Artefacts L√©gendaires..."
execute_command "CREATE(ITEM, oeil_de_wigner, HERO:Omega-Zero)" "≈íil de Wigner"
execute_command "CREATE(ITEM, trompette_apocalypse, HERO:Omega-Zero)" "Trompette de l'Apocalypse"
execute_command "CREATE(ITEM, codex_eternite, HERO:Omega-Zero)" "Codex de l'√âternit√©"
execute_command "CREATE(ITEM, lame_avant_monde, HERO:Omega-Zero)" "Lame d'Avant-Monde"
execute_command "CREATE(ITEM, orbe_echos, HERO:Omega-Zero)" "Orbe des √âchos"
execute_command "CREATE(ITEM, graine_origine, HERO:Omega-Zero)" "Graine de l'Origine"
execute_command "CREATE(ITEM, cristal_nexus, HERO:Omega-Zero)" "Cristal du Nexus"

# √âtats quantiques d'Omega
echo -e "\nüåÄ Cr√©ation des √©tats quantiques d'Omega..."
execute_command "œà001: (0.9+0.1i) ‚äô(Œît+0 @10,10 ‚ü∂ MOV(Omega-Zero, @10,10))" "√âtat Prime"
execute_command "œà002: (0.7+0.3i) ‚äô(Œît+0 @10,10 ‚ü∂ CREATE(ECHO, shadow))" "√âtat Ombre"
execute_command "œà003: (0.5+0.5i) ‚äô(Œît+0 @10,10 ‚ü∂ CREATE(PARADOX, nexus))" "√âtat √âcho"

# Phase 4: Combat - Tours 1-5 (√âveil)
echo -e "\n\nüéÆ === PHASE 4: √âVEIL (Tours 1-5) ==="

execute_command "MOV(Jean-Grofignon, @7,13)" "Jean s'approche du Nexus"
execute_command "MOV(Claudius, @13,13)" "Claudius analyse Omega"
execute_command "USE(ITEM, parchemin_sale, HERO:Chlamydius)" "Chlamydius r√©v√®le l'origine"

# Gel temporel de Jean
execute_command "œà004: ‚äô(Œît+1 @8,10 ‚ü∂ CREATE(ZONE, temporal_gel))" "Jean cr√©e un gel temporel"

# Phase 5: Combat - Tours 6-15 (Fracture)
echo -e "\n\nüí• === PHASE 5: FRACTURE (Tours 6-15) ==="

# Omega active ses artefacts
execute_command "USE(ARTIFACT, orbe_echos, HERO:Omega-Zero)" "Activation de l'Orbe"
execute_command "USE(ARTIFACT, codex_eternite, HERO:Omega-Zero)" "Ouverture du Codex"
execute_command "USE(ARTIFACT, graine_origine, HERO:Omega-Zero)" "Germination de la Graine"

# Timeline secondaire
execute_command "œà010: (0.8+0.2i) ‚äô(Œît+2 @15,10 ‚ü∂ CREATE(TIMELINE, secondary))" "Timeline parall√®le"

# Tentative de recompilation
execute_command "USE(ITEM, compilateur_quantique, HERO:Claudius)" "Claudius tente la recompilation"

# Phase 6: Combat - Tours 16-25 (Entropie)
echo -e "\n\nüå™Ô∏è === PHASE 6: ENTROPIE (Tours 16-25) ==="

# Sacrifice de Jean
execute_command "USE(ABILITY, sacrifice_anchor, HERO:Jean-Grofignon)" "Jean sacrifie son ancrage!"

# Effacement de Chlamydius
execute_command "SCRIBE(Chlamydius, 'L\\'Orbe des √âchos n\\'a jamais exist√©')" "Effacement d'un artefact"

# Infection m√©morielle
execute_command "USE(ABILITY, memory_infection, HERO:Omega-Zero)" "Omega infecte les m√©moires"

# Phase 7: Combat Final - Tours 26-30
echo -e "\n\nüî• === PHASE 7: LE CODEX FINAL (Tours 26-30) ==="

# Faux h√©ros
execute_command "CREATE(COPY, False_Jean, @5,5)" "Apparition du Faux-Jean"
execute_command "CREATE(COPY, False_Claudius, @15,5)" "Apparition du Faux-Claudius"
execute_command "CREATE(COPY, False_Chlamydius, @10,5)" "Apparition du Faux-Chlamydius"

# Formation de la Coalition
execute_command "MOV(Jean-Grofignon, @10,12)" "Jean rejoint le centre"
execute_command "MOV(Claudius, @11,11)" "Claudius forme le triangle"
execute_command "MOV(Chlamydius, @9,11)" "Chlamydius compl√®te la formation"

# La S√©quence Ultime
echo -e "\n\n‚ö°‚ö°‚ö° S√âQUENCE ULTIME ‚ö°‚ö°‚ö°"
echo "Les trois h√©ros entonnent l'incantation finale..."

execute_command "‚Ä†œà001" "Jean: Effondrement contr√¥l√© des paradoxes!"
execute_command "Œ£[ALL_POSSIBILITIES]" "Claudius: Compilation de toutes les possibilit√©s!"
execute_command "FORGE(REALITY_CORE, livre_vide_sans_nom)" "Chlamydius: Cr√©ation de la prison!"

# Scellement final
execute_command "SEAL(Omega-Zero, IN:livre_vide_sans_nom)" "SCELLEMENT D'OMEGA-Z√âRO!"

# V√©rification du r√©sultat
echo -e "\n\nüìä === R√âSULTAT FINAL ==="
curl -s "$API_URL/games/$GAME_ID/state" | grep -E "(currentTurn|winner|status)" | sed 's/,/\n/g' | sed 's/^/   /'

echo -e "\n\nüèÜ === √âPILOGUE ==="
echo "Dans les marges du livre, une note appara√Æt..."
echo "'L'encre s√®che, mais les mots restent. - Œ©'"
echo ""
echo "Le Treizi√®me Codex est scell√©. Pour l'instant."
echo ""
echo "üîÆ ========================================="
echo "   FIN DU TEST - LE TREIZI√àME CODEX"
echo "üîÆ =========================================" 