// üå´Ô∏è SYST√àME DE BROUILLARD DE CAUSALIT√â - CORE LOGIC ONLY
// =======================================================
// Version √©pur√©e - Pas d'interface, juste la logique

class FogOfWarSystem {
    constructor() {
        this.fogStates = {
            UNEXPLORED: { name: 'Unexplored', color: 'rgba(50, 50, 50, 0.9)' },
            COLLAPSED_PAST: { name: 'Collapsed Past', color: 'rgba(100, 100, 100, 0.7)' },
            REACHABLE: { name: 'Reachable', color: 'rgba(255, 255, 0, 0.3)' },
            VISION: { name: 'Vision', color: 'rgba(0, 255, 0, 0.1)' },
            GHOST: { name: 'Ghost', color: 'rgba(255, 255, 255, 0.2)' },
            SUPERPOSED: { name: 'Superposed', color: 'rgba(128, 0, 255, 0.4)' },
            ANCHORED: { name: 'Anchored', color: 'rgba(0, 0, 255, 0.3)' }
        };
        
        this.selectedTimeline = '‚Ñ¨1';
        this.visibleTimelines = new Set(['‚Ñ¨1']);
        this.fogOpacity = 0.8;
        
        // PAS DE LOGS - Silencieux
    }
    
    selectTimeline(timelineId) {
        this.selectedTimeline = timelineId;
        this.updateVisibility();
    }
    
    toggleTimelineVisibility(timelineId) {
        if (this.visibleTimelines.has(timelineId)) {
            this.visibleTimelines.delete(timelineId);
        } else {
            this.visibleTimelines.add(timelineId);
        }
        this.updateVisibility();
    }
    
    updateVisibility() {
        this.renderFog();
    }
    
    renderFog(ctx, gameState) {
        if (!ctx || !gameState) return;
        // Logique de rendu du brouillard - sans logs
    }
    
    // PAS D'INTERFACE - Juste les donn√©es
    getFogDataForTile(x, y, timeline) {
        return {
            state: 'VISION',
            opacity: this.fogOpacity,
            color: this.fogStates.VISION.color
        };
    }
    
    // SUPPRIMER TOUTES LES M√âTHODES D'UI
    // createFogControls() - SUPPRIM√â
    // createHeaderFogControls() - SUPPRIM√â 
    // showContextMenu() - SUPPRIM√â
}

// Export silencieux
window.FogOfWarSystem = FogOfWarSystem; 